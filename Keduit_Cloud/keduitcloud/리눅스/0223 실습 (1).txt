초기화

2G,3G,4G 주파티션 생성

fdisk /dev/sdb

2G,2G 확장 파티션 생성

/ptest/ /stest/ /home1/ 생성

mkdir /{ptest,stest,home1}

2G(xfs)는 /ptest에 마운트

mkfs - t xfs /dev/sdb1
mount /dev/sdb1 /ptest

3G(ext4)는 /stest에 마운트

mkfs.ext4 /dev/sdb2
mount /dev/sdb2 /stest

4G(xfs)는 /home1에 마운트 영구 마운트 설정

mkfs.xfs /dev/sdb3
vi /etc/fstab

G
o
/dev/sdb3  /home1  xfs  defaults  1  1
:wq

mount -a

새로 생성 되는 사용자들이 /home1 에 생성 되도록 설정

useradd -D -b /home1

생성
사용자   uid    gid   comment   home directory  shell
user01  1001   1001  user1     /home1/user01   /bin/bash

useradd -c user1 user01

user02  2000   1000            /home/user2     /bin/csh

useradd -u 2000 -g 1000 -d /home/user2  -s /bin/csh user02

user03  3000   3000  user3     /home/user03    /bin/sh

useradd -u 3000 -b /home -s /bin/sh user03

user04  3001   1000            /home1/user04   /bin/bash

useradd -g 1000 user04

수정
사용자   uid    gid   comment   home directory  shell
user01  1001   1001            /home1/user01    /bin/bash

usermod -c "" user01

user02  1002   1002            /home1/user02    /bin/bash

groupadd -g 1002 user02
usermod -u 1002 -g 1002 -md /home1/user02 -s /bin/bash user02

user03  3000   3000  user3     /home/user03    /bin/sh

usermod -c user3 user03

user04  1004   1004            /home1/user04    /bin/bash

groupadd -g 1004 user04
usermod -u 1004 -g 1004  user04

user03은 sudo 명령어를 사용할 수 있도록 설정

usermod -G wheel user03

default 값을 vi 명령어로 HOME=/home로 변경하시오.

vi /etc/default/useradd

/home1 => /home

그룹 생성
aclgroup 5000 생성

groupadd -g 5000

aclgroup 구성원으로 user02,user04 후에 확인

usermod -G aclgroup user02
usermod -G aclgroup user04

/ptest에 모든 권한을 다 주고 만들어지는 파일이나 디렉토리가 모두 aclgroup의 소유가 되도록 설정

chmod 2777 /ptest
chown :aclgroup /ptest

/ptest/test 파일을 생성 후에 모든 권한 삭제 후에 일반 사용자들이 test 파일을 vi 편집기로 편집할 수 있도록 만드시오.

touch /ptest/test
chmod 000 /ptest/test

chmod u+s /bin/vim

/stest에 user01을 제외한 모든 사용자가 모든 권한을 사용할 수 있도록 설정
그리고 /stest에 만들어지는 파일이나 디렉토리에 user03이 접근할 수 없도록 설정

chmod 777 /stest
setfacl -m u:user01:0,d:u:user03:0 /stest

user02가 매년 1,3,5,9월 2번째,3번째 금요일 밤 11시 58분에 date 명령을 /tmp/user02datefile 에 이어쓰기로 저장하도록 설정하시오.

crontab -e -u user02

58 23 8-21 1,3,5,9 5 date >> /tmp/user02datefile


or

vi /etc/crontab

G
58 23 8-21 1,3,5,9 5 user02 date >> /tmp/user02datefile
:w /etc/cron.d/usercronfile

mount 해제를 하고 사용자을 사용할 수 있는지 확인해보시오.

umount -a 

su - user01

로그인인 됨

홈디렉토리를 사용할 수 없음

확장 파티션 2G 2개를 swap으로 마운트 하시오.

mkswap /dev/sdb5
mkswap /dev/sdb6

swapon /dev/sdb[56]

/dev/sdb6은 swap으로 영구 마운트가 되도록 설정.

vi /etc/fstabl

G
o
/dev/sdb6 swap swap defaults 0 0
esc
:wq



-----------------------------------------------------------------------------------------------

물리볼륨 생성 : pvcreate 장치명1....
볼륨그룹 생성 : vgcreate vg명 pv명... -s pe 사이즈
논리볼륨 생성 : lvcreate vg명 -n lv명 -L 실제 크기 or -l le 갯수

물리볼륨 삭제 : pvremove pv명...
볼륨그룹 삭제 : vgremove vg명
논리볼륨 삭제 : lvremove lv경로

LVM 실습
초기화
/dev/sdb1~4 모두 물리 볼륨으로 생성
4G,4G,6G,6G 시스템 네임 lvm

pvcreate /dev/sdb[1-4]

/dev/sdb2,4 볼륨 그룹 생성 (pe 단위를 8M로) 

vgcreate vg0 /dev/sdb[24] -s 8M

lv01 2G (-L 옵션을 사용해서) 

lvcreate vg0 -L 2G -n lv01

lv02 4G (-l  옵션을 사용해서)

lvcreate vg0 -l 512 -n lv02

lv01 은 /mnt/disk1로 마운트 (파일시스템 xfs)

mkdir /mnt/disk{1,2,3}

mkfs -t xfs /dev/vg0/lv01

mount /dev/vg0/lv01 /mnt/disk1

lv02 는 /mnt/disk2로 마운트 (파일시스템 ext4)

mkfs.ext4 /dev/mapper/vg0-lv02

lv03 생성 - 나머지 용량 모두 사용해서 생성 (파일시스템 xfs)

lvcreate vg0 -l 100%FREE -n lv03

mkfs.xfs /dev/vg0/lv03

vi /etc/fstab

G
o
/dev/mapper/vg0-lv03  /mnt/disk3   xfs defaults 1 1
esc
:wq

mount -a 마운트 시키고 확인

mount -a

lsblk
df -Th

생성한 lv,vg,pv 모두 삭제

umount -a

vi /etc/fstab
G
dd
:wq

lvremove /vg0/lv{01..03}

vgremove vg0

pvremove /dev/sdb{1..4}
