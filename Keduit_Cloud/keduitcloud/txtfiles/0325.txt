3월 25일 목요일 

- 꼬꼬무
- Access-Control List ??? , time range?
- 웹서버2 + Storage 1  + LB
- Docker!!! 에서 워드프레스 실행하기  

fw/vpn -> virtualization -> 서버가상화 -> 도커 -> (bash,html/css/js,php+DB) -> 오픈스택/aws + Python 


 - ACL : 번호나 숫자를 이용하여 정책을 만들고 만들어진 정책을 이용하여 트래픽을 필터링(deny, permit, inspection), 분류 하는데 사용하는 기술


stateful packet inspection -> 출발지와 목적지의 포트가 변경이 되더라도 해당 트래픽의 상태 정보를 "조사" 하여 해당 정보를 stateful table 에 기록하는 방식

 ip nat pool 풀이름 시작번호 끝번호
 ip nat inside source list 1....
 access-list 1 permit 1.1.1.0 0.0.0.255  (분류)

- ACL 은 패킷의 어느 부분까지를 보느냐에 따라 standard, extended 방식으로 구분한다. 
 standard : 패킷의 출발지 IP 주소만을 확인한다. 
 extended : 패킷의 L3, L4 부분을 모두 확인하고 처리할 수 있다. 
            (src/dst ip, src/dst port #)

라우터는 인터페이스에 ACL 을 적용할 때 standard, extended 모두 적용가능하지만 방화벽은 보안성 강화를 위하여 standard 는 사용할 수 없다.


 일반적인 ACL 사용법 on Router

 - top-down 방식
 
외부에서 유입되는 트래픽중 출발지 주소가 1.1.1.1 은 허용하고 나머지는 모두 막힌다 (A)

(A)
  access-list 1 permit host 1.1.1.1
  access-list 1 deny any

(B)
  access-list 1 deny any
  access-list 1 permit host 1.1.1.1

 - ACL 의 가장 아래에는 "deny any, deny ip any any" 이 생략되어 있다.
 - 작성된 ACL 은 적용(interface, line, routing protocol, nat...)해 주어야 활성화된다.  



라우터의 ACL 은 특정 호스트 주소를 골라내기 위해 "wild card bit" 를 사용

  access-list 1 permit 1.1.1.0 0.0.0.255
  access-list 1 permit 1.1.1.1 0.0.0.0 -> host 1.1.1.1

  wild card 0.0.0.255 -> 00000000.00000000.00000000.11111111
  "0" : 동일해야 한다 (Loot at this bit!)
  "1" : Don't care bit!!! 

  192.168.1.0 ~ 192.168.1.255 사이에서 마지막 주소가 1,3,5,7,9... 홀수만 골라내려면??? 
  access-list 1 permit 192.168.1.1 0.0.0.254

             0000 0001
             1111 1110
             

방화벽에서는 와일드카드 비트를 사용하지 않는다. 그냥 서브넷 마스크 사용한다. 


 기본적인 웹 서비스는 3 tier 구조를 갖는다. 

client ----> WEB 서버 ----> WEB Application Server(WAS) --> DBMS(Stg)



[WEB서버+LB 실습] 
현재 VMnet2 에 서버가 배치되어 있으므로 아래와 같이 간단한 구조에서 실습한다.

    WEBSRV1(.100)   WEBSRV2(.200)   STG(.254)
 
              [LB : .99]<-- 공인주소와 1:1로 NAT

 ___________________192.168.2.0/24_____________

     CPU   RAM   NIC1            NIC2
 LB   1     1     NAT             VMnet2
                 DHCP     192.168.2.99 (DG 192.168.2.2, DNS 8.8.8.8)


 WEBSRV2 1  1    DHCP     192.168.2.200 (DG X, DNS X)
 
 STG     1  1    DHCP     192.168.2.254 (DG X, DNS X)

  "모든 인터페이스는 OS 부팅시 자동으로 활성화 되어야 한다"      
  "모두다 minimal install" 로 설치하세요"
  "설치가 마무리되면 192.168.2.X 주소끼리 통신 가능 여부 확인하세요!"

  설치 완료 된 뒤, WEBSRV2 에서는 "yum -y install httpd"
  설치 완료 된 뒤, WEBSRV2, STG, 기존 웹서버(2.100)에서 
                   "yum -y install nfs-utils"   


 모든 서버에서 firewalld 를 종료!, selinux 도 종료해 두어야 한다!!!!
 재 부팅 이후에도 위의 설정은 유지 되어야 한다.
!!!

 systemctl stop firewalld
 systemctl disable firewalld
 setenforce 0
 sed -i 's/SELINUX=enforcing/SELINUX=disabled/g' /etc/selinux/config

 cat /etc/selinux/config 에서 

SELINUX=disabled  <--- 확인해야 함






 번외 : 
 DB 를 사용할 수 있는 방법
  1. 서버에 OS 를 설치하고, 그 위에 RDBMS(mariadb, mysql, oracle..)설치

  2. cloud 상에서 물리자원이나 OS 는 제외하고 RDBMS 만을 설치 배포한다.













- haproxy(오픈소스 기반의 LB) 설치는 yum -y install haproxy 를 이용
- ens32(NAT), ens33(VMnet2) 둘다 up 되어 있을 경우 트래픽이 양쪽으로 나뉘게 되어 속도가 떨어질 수 있으니 콘솔에서 ifdown ens33(vmnet2) 하여 nat 인터페이스를 통해 설치를 진행합니다.
- 설치가 완료되면 ifdown ens32 && ifup ens33  을 해 두세요!

------------------------------ HAProxy 구성내용 (/etc/haproxy/haproxy.cfg 파일 내용)--------------------------
global
log 127.0.0.1 local2

chroot /var/lib/haproxy
pidfile /var/run/haproxy.pid
maxconn 4000
user haproxy
group haproxy
daemon

stats socket /var/lib/haproxy/stats

defaults
mode http
log global
option httplog
option dontlognull
option http-server-close
option forwardfor except 127.0.0.0/8
option redispatch
retries 3
timeout http-request 10s
timeout queue 1m
timeout connect 10s
timeout client 1m
timeout server 1m
timeout http-keep-alive 10s
timeout check 10s
maxconn 3000

frontend http-in
bind 192.168.2.99:80
default_backend app
option forwardfor

backend app
balance roundrobin
server app1 192.168.2.100:80 check
server app2 192.168.2.200:80 check


-------------------> systemctl restart haproxy ---------------> 
 -  테스트 : 윈도우 10에서 http://192.168.2.99 로 접속해본다.

 - 이때, 두 대의 웹서버에서는 tail -f /var/log/httpd/access_log 파일을 
  실시간으로 확인하여 어느쪽 서버로 접속되었는가를 확인해 본다.

 - 이제 준비는 끝났다. 외부에 노출시키자!!!
    
 - LB 주소인 192.168.2.99 를 공인 주소인 211.183.3.99 와 1:1 정적 NAT
   
 - ACL 을 이용하여 외부에서 유입되는 트래픽 중 192.168.2.99 로의 웹 접속을 허용한다.

 - 테스트 : 윈도우 10에서 http://211.183.3.99 로 접속하고 웹서버에서 tail 로 확인한다.
















