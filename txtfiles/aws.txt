
AWS

-내 보안자격증명에서 엑세스키를 하나 생성하기

액세스 키 ID:
AKIA46DERPS74JUCNJRC
보안 액세스 키:
+2xDmVucBkD6cjrW3bCInINzU0bXZuOOt6ivkITE

apt-get -y install python-pip python-pip

python -v

snap install aws-cli

root@master:~/k8s_work# aws configure
AWS Access Key ID [****************NJRC]: AKIA46DERPS74JUCNJRC
AWS Secret Access Key [****************kITE]: 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
Default region name [None]: ap-northeast-2
Default output format [None]:


aws s3 ls
aws s3 sync aws s3://ciw0707-web-site-s3

touch aws/hello.txt

root@master:~# aws s3 sync aws s3://ciw0707-web-site-s3
upload: aws/hello.txt to s3://ciw0707-web-site-s3/hello.txt

aws s3 mb s3://ciw0707-s3-test
make_bucket: ciw0707-s3-test
root@master:~# aws s3 ls
2021-05-27 01:25:27 ciw0707-s3-test
2021-05-27 00:32:47 ciw0707-web-site-s3


EC2

AMI ec2 인스턴스 생성을 위한 이미지 저장소
aws에서 제공하는 이미지 ( aws자체 벤더사에서 등록한 유로 이미지)
자체적으로 제작한 이미지 (기본 이미지 > ec2 배포 > 필요내용설정/구성> 해당인스턴스를 이미지화)

EBS (Elastic Block Storage) > block storage, 인스턴스 생성시 기본적으로 EBS를 사용하여 볼륨을 생성

SG (Security Group) > 인스턴스에 직접연결

탄력적 IP(elastic IP) > 인스턴스를 생성하면 기본적으로 사설 네트워크(VPC)에 자동으로 배치되고 사설주소를 할당 받음
하지만 외부와의 연결을 위해서는 공인주소가 필요한데
기본적으로 인스턴스 생성시 공인주소를 DHCP로 할당 받는다  이는 고정되지 않고
재부팅시에는 변경되지않지만 중지> 재실행시에는 변경된다 
이를 고정하여 사용하고 싶은경우 탄력적IP를 사용한다.

키페어 : 인스턴스생성시 하나의 키쌍을 생성하고 인스턴스내부에는 pubilc key를 삽입
사용자는 private를 사용ㅇ하여 해당인스턴스 접속가능 ec2-user가 기본사용자명으로 만들어짐

로드밸런서 : 부하분산기

auto scaling (추가 선택요소)

cloudwatch > 어떤 이미지에 대해서 모니터링하고 사용량이 어떤 수준에 도달하면 EC2에 알람을 보내서 
auto scaling기능을 수행 (kubernetes의 metric서버 기능과 유사)

ec2로 인스턴스를 생성시 위의 요소들을 추가하여야한다.

*IOPS : 볼륨이 지원할수있는 요청된 초당 I/O 작업 수 > 높을수록 처리속도가 빠르다 

ec2생성후 key를 받아서 putty로 실행 ( amazon linux)
로그인 : ec2-user

인스턴스 종료 > 인스턴스 삭제

-네트워킹 
VPC > 사설네트워크
만약 인스턴스생성시 선택하지않는다면 Default 서브넷에 자동으로 할당된다.

-선택 가능 목록
1.단일 퍼블릭 서브넷이 있는 VPC
2.퍼블릭 및 프라이빗 서브넷이 있는 VPC
3.퍼블릭 및 프라이빗 서브넷이 있고 하드웨어 VPN 액세스를 제공하는 VPC > onpremise서버와 private 서브넷을 VPN통해서 연결
4.프라이빗 서브넷만 있고 하드웨어 VPN 액세스를 제공하는 VPC > 인터넷 연결을 배제, 회사 자체의 웹서버를 사용

*같은데이터센터간에 연결된 네트워크는 연결비용 지불 X
  다른 데이터센터간 연결된 네트워크는 연결비용 지불 필요

openstack 의 Floating IP 
오픈스택의 인스턴스는 생성시 사설주소 부여되며 별도의 공인주소는 부여되지않는다.
(옵션 선택시에는 가능함), flaoting IP를 할당하면 무조건 고정

aws Elastic IP 
인스턴스의 생성과 동시에 사설주소와 공인주소를 할당할수 있으나 해당 공인주소는 고정x
이를 고정하기 위한 목적으로 Elastic IP를 사용함


Cloud Front : 일종의 캐싱서비스

Route 53 : 일종의 DNS서비스

프리티어 라이센스에서는 DB의 Multi AZ구성이 지원되지않는다.


[실습1 ]
1.EC2를 이용하여  웹서버를 만들고 이미지 생성하고 인스턴스 생성

-EC2 Amazon Linux로 EC2생성후 Httpd설치
index.html만들기

-httpd는 8001포트에서 동작하도록 변경

-이미지 생성을 통해 이미지를 생성하고 
해당 이미지를 가지고 인스턴스를 2개생성

LB와 연결하기
LB는 기타 버전을 사용하여 생성
인스턴스의 8001포트와 LB의 80포트를 연결하기 




그후 가비아를 통해 주소 할당

[실습2]
VPC 생성
WEB-VPC  10.0.0.0/16

서브넷 생성
ELB-SUBNET                       10.0.2.0/24
WEB-SUBNET                      10.0.1.0/24
RDS-MASTER-SUBNET       10.0.100.0/24
RDS-SLAVE-SUBNET          10.0.200.0/24
> RDS-MASTER 와 SLAVE는 서로 가용영역이 다르게 설정되어야한다.

DB서브넷 생성 
RDS-Subnet 

RDS-MASTER-SUBNET , RDS-SLAVE-SUBNET포함시키기

인터넷 게이트웨이 생성 > WEB-IGW
WEB-VPC에 연결하기 

라우팅테이블 생성
WEB-IGW-VPC 
VPC : WEB-VPC
라우팅 편집 
대상 0.0.0.0/0
대상 WEB-IGW

서브넷에서 
ELB-SUBNET의 라우팅테이블 변경 > WEB-IGW-VPC

보안 그룹 생성

WEB-SG
ssh -10.0.2.0/24
 ( 인터넷연결이없으므로 인터넷상에서 ssh로 LB쪽으로 접속하고
 LB쪽에있는 관리용 인스턴스에서 ssh로 다시 접속해야함)





네트워크 ACL : 차단에 중점
보안그룹 : 허용에 중점

Region(데이터 센터가 연결된 가상의 그룹 > 국가 ) > AZ(Ability Zone, 실제 물리적인 데이터센터, 모두 이중화되어있음 )
우리나라에는 AWS datacenter 자체가 들어온것은아니며 대여해서 사용함
a-일산 b-목동(KT) c-용인


