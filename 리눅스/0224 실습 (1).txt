볼륨그룹 확장 : vgextend vg명 pv명... 
볼륨그룹 축소 : vgreduce vg명 pv명...
물리볼륨 내용 이동 : pvmove pv명...

논리볼륨 확장 : lvextend lv경로 -r(파일시스템 확장)
xfs  파일시스템 확장 : xfs_growfs 마운트 포인트
ext4 파일시스템 확장 : resize2fs lv경로

LVM 실습

LVM 확장 축소 실습

파티션 모두 삭제
파티션 용량 4,6,4,6
/dev/sdb1~4 모두 물리 볼륨으로 생성

pvcreate /dev/sdb[1-4]

/dev/sdb1,4 으로 볼륨 그룹 생성 (pe 단위를 16M로)

vgcreate vg0 /dev/sdb[14] -s 16M

lv01 4G (-L 옵션을 사용해서) 

lvcreate vg0 -L 4G -n lv01

lv02 4G (-l  옵션을 사용해서)

lvcreate vg0 -l 256 -n lv02

lv03 남은 용량 모두 사용 

lvcreate vg0 -l 100%FREE -n lv03

lv01 은 xfs 파일시스템으로 format 해서 /mnt/disk1로 마운트 

mkdir /mnt/disk{1..4}

mkfs.xfs /dev/vg0/lv01 
mount /dev/vg0/lv01 /mnt/disk1

lv02 는 ext4 파일시스템으로 format 해서 /mnt/disk2로 마운트

mkfs -t ext4 /dev/mapper/vg0-lv02
mount /dev/mapper/vg0-lv02 /mnt/disk2

lv03 은 xfs 파일시스템으로 format 해서/mnt/disk3로 마운트 

mkfs.xfs /dev/vg0/lv03 /mnt/disk3

볼륨그룹에 /dev/sdb3 추가할 것

vgextend vg0 /dev/sdb3

lv01를 5G로 확장할 것(+ 옵션을 사용해서) -r 옵션 사용하지 말 것

lvextend -L +1G /dev/vg0/lv01 

lsblk => lv01는 확장 확인
df -Th => 확장 안됨

명령어로 파일시스템 확장

xfs_growfs /mnt/disk1

lv02를 6G로 확장할 것(+ 옵션을 사용하지 말고) -r 옵션 사용하지 말 것

lvextend -L 6G /dev/vg0/lv02

lsblk => lv02 확장 확인
df -Th => 확장 안됨

명령어로 파일시스템 확장

resize2fs /dev/vg0/lv02

용량 확장 확인

df -Th

/dev/sdb4가 문제가 생겼습니다. /dev/sdb4를 제거하시오. 

vgreduce /dev/sdb4
에러 발생 : /dev/sdb4 사용중

pvmove  /dev/sdb4
에러 발생 : 공간 부족

vgextend vg0 /dev/sdb3
pvmove /dev/sdb4
vgreduce vg0 /dev/sdb4

---------------------------------------------------

systemctl 

status : 상태확인
start : 시작
stop : 종료
restart : 재시작
reload : 재설정
enable : 활성화
disable : 비활성화
mask : 마스크 설정
unmansk : 마스크 해제

systemctl 실습

httpd 서비스 상태 확인

systemctl status httpd.service

httpd 서비스 시작

systemctl start httpd.service
systemctl status httpd.service

httpd 서비스 활성화

systemctl enable httpd.service
systemctl status httpd.service

httpd 서비스 중지

systemctl stop httpd.service
systemctl status httpd.service

httpd 서비스 비활성화

systemctl disable httpd.service
systemctl status httpd.service

httpd 서비스 잠금

systemctl mask httpd.service
systemctl status httpd.service

httpd 서비스 잠금해제

systemctl unmask httpd
systemctl status httpd.service

httpd 서비스 시작 후에 pid 확인

systemctl start httpd
systemctl status httpd.service

httpd 서비스 리로드 후 pid 확인

systemctl reload httpd
systemctl status httpd.service => pid 변경 안됨

httpd 서비스 재시작 후 pid 확인

systemctl restart httpd
systemctl status httpd.service => pid 변경 됨

----------------------------------------------
log : 시스템에 일어나는 이벤트 들에 대한 기록

중요한 이유
- 이슈 발생시에 해당 시간에 일어났었던 일에 파악하기 위한 첫번째 수단

로그가 저장되는 위치 : /var/log

로그를 관장한 서비스 : systemd-journald, rsyslogd 

-> systemd-journald : 로그를 수집하는 역활 (/run/)
-> rsyslogd : 로그를 저장하는 역활 (/var/)

rsyslong 서비스

/var/messages : 대부분의 로그기록(단 인증,메일,반복예약,부팅 그리고 디버그 제외)
/var/secure : 인증에 관련된 로그
/var/maillog : 메일에 관련된 로그
/var/cron : 반복적인 예약에 관련된 로그
/var/boot.log : 부팅에 관련된 로그

facility(기능).priority(우선순위)

facility
authpriv : 인증
auth,security : login
cron : cron,at 과 같은 스케쥴링
daemon : telnet,ftp 와 같은 데몬서비스
kern : 커널
mail : 메일
local1-8 : 부팅
lpr : 프린트
mark : syslog에 의해 만들어지는 날짜유형
user : 사용자

priority

0:emerg
1:alert
2:critical
3:error
4:warning
5:notice
6:info
7:debug

rsyslog.conf 설정 변경후 반영

systemctl restart rsyslog.service

실시간 로그 모니터링

tail -f /var/log/로그파일

로그 메세지 발생

logger -p 기능.우선순위  "메세지"

systemd-journald 서비스

journalctl : 확인
-> 옵션 : 
	- n 숫자 : 최근 내역서 숫자 만큼 출력
	- p 우선순위 : 해당 우선순위 이상으로 출력
	- f : 실시간으로 모니터링
	--since yyyy-mm-dd : 해당 날짜부터 현재까지 출력
	--since yyyy-mm-dd --until yyyy-mm-dd : since 부터 until까지 출력

/run/log/journal  영구저장

mkdir /var/log/journal
chmod g+s /var/log/journal
chown :systemd-journal /var/log/journal
systemctl restart systemd-journald.service

log 실습

rsyslog.conf 파일을 수정해서 cron.err 이상 내용만 /var/log/cron1 파일에 저장되도록 설정하시오.

vi /etc/rsyslog.conf

/RULE

cron.err                /var/log/cron1
:wq

systemctl restart rsyslong.service

logger 명령어를 통해서 cron.info => cronlog1 와 cron.crit => cronlog2 의 메세지를 발생시켜서 /var/log/cron 파일과 /var/log/cron1 파일을 확인해보시오.

logger -p cron.info "cronlog1"
logger -p cron.crit "cronlog2"

tail -2 /var/log/cron

cronlog1
cronlog2

tail -1 /var/log/cron1

cronlog2

journal 내용을 영구 저장하도록 설정하시오.

mkdir /var/log/journal
chown :systemd-journal /var/log/journal
chmod g+s /var/log/journal
systemctl restart systemd-journald

ls -l /run/log/journal
에러발생 : 존재하지 않음.
ls -l /var/log/journal
해당 디렉토리에 데이타 있음.











